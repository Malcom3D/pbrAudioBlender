schema_version = "1.0.0"

id = "pbrAudio"
version = "0.3.4"
name = "pbrAudio Render"
tagline = "Physically Based Rendered Audio Render"
maintainer = "Malcom3D <malcom3d.gpl@gmail.com>"
type = "add-on"

# # Optional: link to documentation, support, source files, etc
# website = "https://extensions.blender.org/add-ons/my-example-package/"

# # Optional: tag list defined by Blender and server, see:
# # https://docs.blender.org/manual/en/dev/advanced/extensions/tags.html
# tags = ["Animation", "Sequencer"]
tags = ["Node", "Physics", "Render"]

blender_version_min = "4.5.0"
# # Optional: Blender version that the extension does not support, earlier versions are supported.
# # This can be omitted and defined later on the extensions platform if an issue is found.
# blender_version_max = "5.1.0"

# License conforming to https://spdx.org/licenses/ (use "SPDX: prefix)
# https://docs.blender.org/manual/en/dev/advanced/extensions/licenses.html
license = [
  "SPDX:GPL-3.0-or-later",
]
# # Optional: required by some licenses.
# copyright = [
#   "2002-2024 Developer Name",
#   "1998 Company Name",
# ]

# # Optional: list of supported platforms. If omitted, the extension will be available in all operating systems.
# platforms = ["windows-x64", "macos-arm64", "linux-x64"]
# # Other supported platforms: "windows-arm64", "macos-x64"
platforms = ["linux-x64"]

# # Optional: bundle 3rd party Python modules.
# # https://docs.blender.org/manual/en/dev/advanced/extensions/python_wheels.html
# wheels = [
#   "./wheels/hexdump-3.3-py3-none-any.whl",
#   "./wheels/jsmin-3.0.1-py3-none-any.whl",
# ]
wheels = [
   "./wheels/PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
   "./wheels/typing_extensions-4.15.0-py3-none-any.whl",
   "./wheels/donfig-0.8.1.post1-py3-none-any.whl",
   "./wheels/packaging-25.0-py3-none-any.whl",
   "./wheels/numcodecs-0.16.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
   "./wheels/crc32c-2.7.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
   "./wheels/zarr-3.1.2-py3-none-any.whl",
   "./wheels/zarrs-0.2.0-cp311-abi3-manylinux_2_28_x86_64.whl",
   "./wheels/rich-14.1.0-py3-none-any.whl",
   "./wheels/cffi-2.0.0-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl",
   "./wheels/soundfile-0.13.1-py2.py3-none-manylinux_2_28_x86_64.whl",
   "./wheels/llvmlite-0.45.0-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl",
   "./wheels/numba-0.62.1-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl",
   "./wheels/dask-2025.9.1-py3-none-any.whl",
   "./wheels/click-8.3.0-py3-none-any.whl",
   "./wheels/cloudpickle-3.1.1-py3-none-any.whl",
   "./wheels/fsspec-2025.9.0-py3-none-any.whl",
   "./wheels/toolz-1.0.0-py3-none-any.whl",
   "./wheels/importlib_metadata-8.7.0-py3-none-any.whl",
   "./wheels/zipp-3.23.0-py3-none-any.whl",
   "./wheels/partd-1.4.2-py3-none-any.whl",
   "./wheels/locket-1.0.0-py2.py3-none-any.whl",
   "./wheels/pywavelets-1.9.0-cp311-cp311-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl",
   "./wheels/scipy-1.16.2-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl",
   "./wheels/distributed-2025.9.1-py3-none-any.whl",
   "./wheels/jinja2-3.1.6-py3-none-any.whl",
   "./wheels/msgpack-1.1.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
   "./wheels/psutil-7.1.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
   "./wheels/tornado-6.5.2-cp39-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
   "./wheels/urllib3-2.5.0-py3-none-any.whl",
   "./wheels/zict-3.0.0-py2.py3-none-any.whl",
   "./wheels/sortedcontainers-2.4.0-py2.py3-none-any.whl",
   "./wheels/tblib-3.1.0-py3-none-any.whl",
   "./wheels/markupsafe-3.0.3-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl",
   "./wheels/trimesh-4.8.3-py3-none-any.whl",
]

# # Optional: add-ons can list which resources they will require:
# # * files (for access of any filesystem operations)
# # * network (for internet access)
# # * clipboard (to read and/or write the system clipboard)
# # * camera (to capture photos and videos)
# # * microphone (to capture audio)
# #
# # If using network, remember to also check `bpy.app.online_access`
# # https://docs.blender.org/manual/en/dev/advanced/extensions/addons.html#internet-access
# #
# # For each permission it is important to also specify the reason why it is required.
# # Keep this a single short sentence without a period (.) at the end.
# # For longer explanations use the documentation or detail page.
#
# [permissions]
# network = "Need to sync motion-capture data to server"
# files = "Import/export FBX from/to disk"
# clipboard = "Copy and paste bone transforms"
[permissions]
files = "Import/export files for cache from/to disk"

# # Optional: advanced build settings.
# # https://docs.blender.org/manual/en/dev/advanced/extensions/command_line_arguments.html#command-line-args-extension-build
# [build]
# # These are the default build excluded patterns.
# # You only need to edit them if you want different options.
# paths_exclude_pattern = [
#   "__pycache__/",
#   "/.git/",
#   "/*.zip",
# ]
